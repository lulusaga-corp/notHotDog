// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AccountHome scene renders without crashing 1`] = `
<RCTScrollView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#f5f5f5",
            "borderColor": "#e3e3e3",
            "borderRadius": 3,
            "borderWidth": 1,
            "flexDirection": "row",
            "height": 40,
            "marginBottom": 5,
            "marginLeft": 10,
            "marginRight": 10,
            "marginTop": 5,
            "overflow": "hidden",
          },
          Object {
            "height": 40,
            "marginBottom": 20,
            "marginTop": 10,
          },
        ]
      }
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
            },
            Array [
              Object {
                "flex": 1,
              },
              false,
              false,
              Object {
                "borderBottomRightRadius": 3,
                "borderTopRightRadius": 3,
              },
              Object {
                "borderBottomLeftRadius": 3,
                "borderTopLeftRadius": 3,
              },
              Object {
                "backgroundColor": "white",
              },
            ],
          ]
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Array [
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              },
              undefined,
            ]
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            disabled={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {},
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
                Array [
                  Object {
                    "color": "#5e6977",
                    "fontSize": 16.25,
                    "fontWeight": "500",
                  },
                  undefined,
                  Object {
                    "color": "#43484d",
                  },
                  Object {
                    "color": "#ef4836",
                  },
                ],
              ]
            }
          >
            meal
          </Text>
        </View>
      </View>
    </View>
    <View />
    <View />
  </View>
</RCTScrollView>
`;

exports[`AccountManagement scene renders correctly without crashing 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
  >
    Are you sure you want to delete your account? This action cannot be undone.
  </Text>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Delete My Account
      </Text>
    </View>
  </View>
</View>
`;

exports[`AccountSettings scene renders without crashing 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#ffffff",
          "borderColor": "#bbb",
          "borderTopWidth": 1,
          "marginTop": 20,
        },
        undefined,
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#bbb",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            undefined,
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": 10,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "#43484d",
                      "fontSize": 17.5,
                    },
                    Object {
                      "marginLeft": 10,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              Edit Account Info
            </Text>
          </View>
          <View
            style={undefined}
          >
            <View />
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "flex-end",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            onPress={undefined}
            style={
              Array [
                false,
                false,
                false,
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
            underlayColor="white"
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#bdc6cf",
                    "fontSize": 28,
                  },
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              î—Œ
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#bbb",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            undefined,
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": 10,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "#43484d",
                      "fontSize": 17.5,
                    },
                    Object {
                      "marginLeft": 10,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              Edit Dietary Preferences
            </Text>
          </View>
          <View
            style={undefined}
          >
            <View />
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "flex-end",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            onPress={undefined}
            style={
              Array [
                false,
                false,
                false,
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
            underlayColor="white"
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#bdc6cf",
                    "fontSize": 28,
                  },
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              î—Œ
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "backgroundColor": "transparent",
              "borderBottomColor": "#bbb",
              "borderBottomWidth": 1,
              "paddingBottom": 10,
              "paddingRight": 10,
              "paddingTop": 10,
            },
            undefined,
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "flexDirection": "row",
              "marginLeft": 10,
            },
            undefined,
          ]
        }
      >
        <View
          style={
            Object {
              "flex": 1,
              "justifyContent": "center",
            }
          }
        >
          <View
            style={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              numberOfLines={1}
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "#43484d",
                      "fontSize": 17.5,
                    },
                    Object {
                      "marginLeft": 10,
                    },
                    undefined,
                    undefined,
                  ],
                ]
              }
            >
              Delete Your Account
            </Text>
          </View>
          <View
            style={undefined}
          >
            <View />
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "flex-end",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            onPress={undefined}
            style={
              Array [
                false,
                false,
                false,
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
            underlayColor="white"
          >
            <Text
              accessible={true}
              allowFontScaling={false}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {
                    "color": "#bdc6cf",
                    "fontSize": 28,
                  },
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                    },
                    undefined,
                  ],
                  Object {
                    "fontFamily": "Material Icons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              î—Œ
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Array [
        Object {
          "marginLeft": 15,
          "marginRight": 15,
        },
        undefined,
        undefined,
        undefined,
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          undefined,
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        pointerEvents="box-only"
        style={
          Array [
            Object {
              "alignItems": "center",
              "backgroundColor": "#9E9E9E",
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 19,
            },
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
            Object {
              "padding": 12,
            },
            undefined,
            undefined,
            undefined,
            Object {
              "backgroundColor": "#ef4836",
              "borderRadius": 5,
              "marginTop": 5,
            },
            undefined,
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "white",
                  "fontSize": 20,
                },
                undefined,
                Object {
                  "fontSize": 17.5,
                },
                undefined,
                undefined,
                undefined,
                undefined,
              ],
            ]
          }
        >
          Sign Out
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Camera scene renders without crashing 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View />
</View>
`;

exports[`DietaryInfo scene renders correctly without crashing 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
  >
    Are you sure you want to delete your account? This action cannot be undone.
  </Text>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Delete My Account
      </Text>
    </View>
  </View>
</View>
`;

exports[`Food Selector scene renders without crashing 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <RCTScrollView>
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Object {
            "fontSize": 20,
            "paddingTop": 15,
            "textAlign": "center",
          }
        }
      >
        Select the foods you're going to eat...
      </Text>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#ffffff",
              "borderColor": "#bbb",
              "borderTopWidth": 1,
              "marginTop": 20,
            },
            undefined,
          ]
        }
      >
        <View
          disabled={false}
          onLongPress={undefined}
          onPress={undefined}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "borderBottomColor": "#bbb",
                "borderBottomWidth": 1,
                "paddingBottom": 10,
                "paddingRight": 10,
                "paddingTop": 10,
              },
              undefined,
              false,
              false,
            ]
          }
          underlayColor="white"
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={undefined}
              >
                <View />
              </View>
              <View
                style={undefined}
              >
                <View />
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-end",
                    "flex": 1,
                    "justifyContent": "center",
                  },
                  Object {
                    "alignItems": null,
                  },
                  undefined,
                ]
              }
            >
              <TextInput
                autoCapitalize="none"
                autoCorrect={true}
                autoFocus={undefined}
                defaultValue={undefined}
                editable={true}
                keyboardType={undefined}
                maxLength={undefined}
                multiline={undefined}
                onBlur={undefined}
                onChangeText={[Function]}
                onFocus={undefined}
                placeholder="Add other foods..."
                returnKeyType={undefined}
                secureTextEntry={undefined}
                selectTextOnFocus={undefined}
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "height": 20,
                      "textAlign": "right",
                    },
                    undefined,
                  ]
                }
                underlineColorAndroid="transparent"
                value=""
              />
            </View>
            <View
              accessibilityComponentType={undefined}
              accessibilityLabel={undefined}
              accessibilityTraits={undefined}
              accessible={true}
              collapsable={undefined}
              hitSlop={undefined}
              isTVSelectable={true}
              nativeID={undefined}
              onLayout={undefined}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "flex-end",
                  "justifyContent": "center",
                  "opacity": 1,
                }
              }
              testID={undefined}
              tvParallaxProperties={undefined}
            >
              <View
                onPress={undefined}
                style={
                  Array [
                    false,
                    false,
                    false,
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    },
                    undefined,
                  ]
                }
                underlayColor="white"
              >
                <Text
                  accessible={true}
                  allowFontScaling={false}
                  disabled={false}
                  ellipsizeMode="tail"
                  style={
                    Array [
                      Object {
                        "color": "#bdc6cf",
                        "fontSize": 28,
                      },
                      Array [
                        Object {
                          "backgroundColor": "transparent",
                        },
                        undefined,
                      ],
                      Object {
                        "fontFamily": "Material Icons",
                        "fontStyle": "normal",
                        "fontWeight": "normal",
                      },
                    ]
                  }
                >
                  î……
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                  "borderBottomColor": "#bbb",
                  "borderBottomWidth": 1,
                  "paddingBottom": 10,
                  "paddingRight": 10,
                  "paddingTop": 10,
                },
                Object {
                  "backgroundColor": "#00a587",
                },
                false,
                false,
              ],
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "marginLeft": 10,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Object {
                  "flex": 1,
                  "justifyContent": "center",
                }
              }
            >
              <View
                style={undefined}
              >
                <Text
                  accessible={true}
                  allowFontScaling={true}
                  disabled={false}
                  ellipsizeMode="tail"
                  numberOfLines={1}
                  style={
                    Array [
                      Object {},
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      undefined,
                      Array [
                        Object {
                          "color": "#43484d",
                          "fontSize": 17.5,
                        },
                        Object {
                          "marginLeft": 10,
                        },
                        Object {
                          "color": "white",
                          "textAlign": "center",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Click here to submit!
                </Text>
              </View>
              <View
                style={undefined}
              >
                <View />
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`History scene renders without crashing 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <RCTScrollView>
    <View>
      <View
        style={undefined}
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`NutritionHistory scene renders without crashing 1`] = `
<View>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#f5f5f5",
          "borderColor": "#e3e3e3",
          "borderRadius": 3,
          "borderWidth": 1,
          "flexDirection": "row",
          "height": 40,
          "marginBottom": 5,
          "marginLeft": 10,
          "marginRight": 10,
          "marginTop": 5,
          "overflow": "hidden",
        },
        Object {
          "height": 40,
          "marginBottom": 20,
          "marginTop": 10,
        },
      ]
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 0,
            },
            false,
            false,
            Object {
              "borderBottomLeftRadius": 3,
              "borderTopLeftRadius": 3,
            },
            Object {
              "backgroundColor": "white",
            },
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                Object {
                  "color": "#43484d",
                },
                Object {
                  "color": "#ef4836",
                },
              ],
            ]
          }
        >
          Today
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 1,
            },
            Object {
              "borderLeftColor": "#bdc6cf",
              "borderLeftWidth": 1,
            },
            false,
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          Week
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "borderRightColor": "#bdc6cf",
              "borderRightWidth": 1,
            },
            false,
            false,
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          Month
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "backgroundColor": "transparent",
          },
          Array [
            Object {
              "flex": 1,
            },
            false,
            false,
            Object {
              "borderBottomRightRadius": 3,
              "borderTopRightRadius": 3,
            },
            false,
            false,
          ],
        ]
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
            },
            undefined,
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {},
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              Array [
                Object {
                  "color": "#5e6977",
                  "fontSize": 16.25,
                  "fontWeight": "500",
                },
                undefined,
                false,
                false,
              ],
            ]
          }
        >
          All
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`SingleHistoryView scene renders without crashing 1`] = `
<RCTScrollView
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "flex": 1,
          "marginBottom": 20,
          "marginTop": 10,
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#f5f5f5",
              "borderColor": "#e3e3e3",
              "borderRadius": 3,
              "borderWidth": 1,
              "flexDirection": "row",
              "height": 40,
              "marginBottom": 5,
              "marginLeft": 10,
              "marginRight": 10,
              "marginTop": 5,
              "overflow": "hidden",
            },
            undefined,
          ]
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              Array [
                Object {
                  "flex": 1,
                },
                false,
                false,
                Object {
                  "borderBottomRightRadius": 3,
                  "borderTopRightRadius": 3,
                },
                Object {
                  "borderBottomLeftRadius": 3,
                  "borderTopLeftRadius": 3,
                },
                Object {
                  "backgroundColor": "white",
                },
              ],
            ]
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flex": 1,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              disabled={false}
              ellipsizeMode="tail"
              style={
                Array [
                  Object {},
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  undefined,
                  Array [
                    Object {
                      "color": "#5e6977",
                      "fontSize": 16.25,
                      "fontWeight": "500",
                    },
                    Object {},
                    Object {
                      "color": "#43484d",
                    },
                    Object {
                      "color": "#ef4836",
                    },
                  ],
                ]
              }
            >
              meal
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View />
  </View>
</RCTScrollView>
`;

exports[`UserInfo scene renders correctly without crashing 1`] = `
<View>
  <Text
    accessible={true}
    allowFontScaling={true}
    disabled={false}
    ellipsizeMode="tail"
  >
    Are you sure you want to delete your account? This action cannot be undone.
  </Text>
  <View
    accessibilityComponentType="button"
    accessibilityLabel={undefined}
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        disabled={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "padding": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Delete My Account
      </Text>
    </View>
  </View>
</View>
`;
